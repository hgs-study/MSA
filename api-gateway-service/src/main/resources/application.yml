server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates: # 조건절
#            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: # 조건절
            - Path=/user-service/login #로그인
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie # 전달되는 데이터를 매번 새롭게 인식하기 위해서 삭제
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # /user-service/(?<segment>.*) 요청한 uri를 {segment} 변경
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: # 조건절
            - Path=/user-service/users #회원가입
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: # 조건절
            - Path=/user-service/** #welcome, health_check 등등
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates: # 조건절
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates: # 조건절
            - Path=/order-service/**
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates: # 조건절
            - Path=/first-service/**   # http://localhost:8081/first-service/** uri 뒤에 붙어서 매핑됨
          filters:
            #- AddRequestHeader=first-request, first-request-header2 # key , value
            #- AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates: # 조건절
            - Path=/second-service/**
          filters:
            #- AddRequestHeader=second-request, second-request-header2
            #- AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true
